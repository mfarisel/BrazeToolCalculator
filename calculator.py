#Here we gooooimport tkinter as tkfrom tkinter import ttk# Initiating the windowroot = tk.Tk()root.title('Braze Calculator')# making it so the window is not resizableroot.resizable(width=True, height=True)# This sets the size of the windowroot.geometry('800x600')root.configure(bg='gray')# Creating a 2X2 grid matrix for the main windowsroot.grid_rowconfigure(0, weight=1)root.grid_rowconfigure(1, weight=1)root.grid_columnconfigure(0, weight=1)root.grid_columnconfigure(1, weight=1)#Creating the canvas frame and placing it on the left side of the window (first column)braze_table_frame = tk.Frame(root, width=400, height=300)braze_table_frame.grid(column=0,row=0, rowspan=1, sticky='NESW', padx=5, pady=5)#Creating the table frame where data will be storedtable_frame = tk.Frame(root, width=400, height=300)table_frame.grid(column=0,row=1, sticky='NESW', padx=5, pady=5)#Creating the interaction frame and placing it in the right window (second column)interaction_frame = tk.Frame(root, width=400, height=600)interaction_frame.grid(column=1,row=0, rowspan =2, sticky='NESW', padx=5, pady=5)#not sure if height/width matters or if it is all just weight dependent.interaction_frame.grid_rowconfigure(0, weight=20)interaction_frame.grid_rowconfigure(1, weight=1)text_frame = tk.Frame(interaction_frame, width=400, height = 550)text_frame.grid(column=0,row=0, sticky='NESW', padx=5, pady=5)button_frame = tk.Frame(interaction_frame, width = 400, height = 50)button_frame.grid(column=0,row=1, sticky='NESW', padx=5, pady=5)# Creating a canvas, placing it in the frame and set background colorcanvas = tk.Canvas(braze_table_frame, bg = 'white', width= 400, height = 300)canvas.grid(column=0,row=0, sticky='NESW')#configuring the interation frametext_frame.grid_columnconfigure(0, weight =1)text_frame.grid_columnconfigure(1, weight =1)text_frame.grid_columnconfigure(2, weight =1)text_frame.grid_columnconfigure(3, weight =1)text_frame.grid_columnconfigure(4, weight =1)text_frame.grid_columnconfigure(5, weight =1)text_frame.grid_rowconfigure(0, weight =1)text_frame.grid_rowconfigure(1, weight =1)text_frame.grid_rowconfigure(2, weight =1)text_frame.grid_rowconfigure(3, weight =1)text_frame.grid_rowconfigure(4, weight =1)text_frame.grid_rowconfigure(5, weight =1)text_frame.grid_rowconfigure(6, weight =1)text_frame.grid_rowconfigure(7, weight =1)text_frame.grid_rowconfigure(8, weight =1)text_frame.grid_rowconfigure(9, weight =1)button_frame.grid_columnconfigure(0, weight =1)button_frame.grid_columnconfigure(1, weight =1)button_frame.grid_columnconfigure(2, weight =1)button_frame.grid_columnconfigure(3, weight =1)button_frame.grid_columnconfigure(4, weight =1)button_frame.grid_columnconfigure(5, weight =1)button_frame.grid_rowconfigure(0, weight =1)button_frame.grid_rowconfigure(1, weight =1)class standard_textbox:    def __init__(self, frame, row, column, span):        text = tk.Text(frame,                         height = .1,                         width = 10)                text.grid(column = column,                     row = row,                     sticky = 'EW',                     padx=5,                     pady=5,                     columnspan=span)'''#old not sure if still usefulclass standard_textbox:        def __init__(self, frame, row, coloumn, span):        self.frame = frame        self.row = row        self.column = coloumn        self.span = span            def create_textbox(frame,row,column,span):                textbox = tk.Text(frame,                           height = .1,                          width = 10)                textbox.grid(column = column,                     row = row,                      columnspan = span,                      sticky = 'EW',                      padx = 5,                      pady = 5)                return textbox'''class standard_button:    def __init__(self, frame, text, command, row, column, span):        button = tk.Button(frame,                           text = text,                           highlightbackground = 'gray',                           command = command)                button.grid(column = column,                     row = row,                     sticky = 'NESW',                     padx=5,                     pady=5,                     columnspan=span)def calculate():    passdef clear_UI():    passdef add_part():    passdef delete_part():    passdef clear_table():    passbutton_calculate = standard_button(button_frame, 'Calculate', add_part, 0, 0, 3)button_clear_ui = standard_button(button_frame, 'Clear', add_part, 0, 3, 3)button_add = standard_button(button_frame, 'Add Part', add_part, 1, 0, 2)button_delete = standard_button(button_frame, 'Delete Part', add_part, 1, 2, 2)button_clear_table = standard_button(button_frame, 'Clear Table', add_part, 1, 4, 2)#Material drop down listpart_materials = ('Copper',                  '300 SST',                  'Monel',                  'Inconel',                  'Iron',                  'Kovar',                  'Al300'                  'Moly')braze_materials = ('Copper (1110 \xb0C)',                    'Gold (1090 \xb0C)',                    'Nicoro (1060 \xb0C)',                    '35/65 (1040 \xb0C)',                    '50/50 (1000 \xb0C)',                    'Nicoro (990 \xb0C)',                    'Nicoro 60 (955 \xb0C)',                    '80/20 (940 \xb0C)',                   'Silcoro 75 (925 \xb0C)',                   'Silcoro 60 (875 \xb0C)',                   'Nicusil 3 (825 \xb0C)',                   'Cusil (810 \xb0C)',                   'Incusil 15 (735 \xb0C)',                   'Bakeout (450 \xb0C)')#Creating Material Drop Down Boxsbraze_material = tk.StringVar()braze_material_chosen = ttk.Combobox(text_frame,                                state="readonly",                               width = 20,                             textvariable = braze_material,                            justify = 'center'                            )braze_material_chosen.grid(column=1,row=0, sticky='NESW', padx=5, pady=5, columnspan=3)braze_material_chosen['values'] = braze_materialsbraze_material_chosen.current(0)part_material = tk.StringVar()part_material_chosen = ttk.Combobox(text_frame,                                state="readonly",                               width = 20,                             textvariable = part_material,                            justify = 'center'                            )part_material_chosen.grid(column=1,row=1, sticky='NESW', padx=5, pady=5, columnspan=3)part_material_chosen['values'] = part_materialspart_material_chosen.current(0)tool_material = tk.StringVar()tool_material_chosen = ttk.Combobox(text_frame,                                state="readonly",                               width = 20,                             textvariable = tool_material,                            justify = 'center'                            )tool_material_chosen.grid(column=1,row=2, sticky='NESW', padx=5, pady=5, columnspan=3)tool_material_chosen['values'] = part_materialstool_material_chosen.current(0)#Creating text boxesid_text_box = standard_textbox(text_frame,3,1,1)'''id_text_box = tk.Text(text_frame, height = .1, width = 10)id_text_box.grid(column=1,row=3, sticky='EW', padx=5, pady=5, columnspan=1)'''id_tol_text_box = tk.Text(text_frame, height = .1, width = 10)id_tol_text_box.grid(column=3,row=3, sticky='EW', padx=5, pady=5, columnspan=1)od_text_box = tk.Text(text_frame, height = .1, width = 10)od_text_box.grid(column=1,row=4, sticky='Ew', padx=5, pady=5, columnspan=1)odtol_text_box = tk.Text(text_frame, height = .1, width = 10)odtol_text_box.grid(column=3,row=4, sticky='EW', padx=5, pady=5, columnspan=1)runout_text_box = tk.Text(text_frame, height = .1, width = 10)runout_text_box.grid(column=1,row=5, sticky='EW', padx=5, pady=5, columnspan=1)#labeling textboxsmaterial_label = tk.Label(text_frame, text = 'Part Material:', anchor='w', justify='left')material_label.grid(column=0,row=1, sticky='WE', columnspan=1)material_label = tk.Label(text_frame, text = 'Tool Material:', anchor='w', justify='left')material_label.grid(column=0,row=2, sticky='WE', columnspan=1)id_text_box_label = tk.Label(text_frame, text = ' Part Inner Diameter:', anchor='w', justify='left')id_text_box_label.grid(column=0,row=3, sticky='WE', columnspan=1)od_text_box_label = tk.Label(text_frame, text = 'Part Outer Diameter:', anchor='w', justify='left')od_text_box_label.grid(column=0,row=4, sticky='WE', columnspan=1)runout_text_box_label = tk.Label(text_frame, text = 'Geometric Tolerance:', anchor='w', justify='left')runout_text_box_label.grid(column=0,row=5, sticky='WE', columnspan=1)OD_sign_label = tk.Label(text_frame, text = '+/-',width=3)OD_sign_label.grid(column=2,row=3, sticky='EW', padx=2, pady=2)ID_sign_label = tk.Label(text_frame, text = '+/-',width=3)ID_sign_label.grid(column=2,row=4, sticky='EW', padx=2, pady=2)#it is a startcanvas.create_rectangle(20,50,111,150, fill='red', width =3)root.mainloop()